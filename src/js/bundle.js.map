{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://test/./src/js/script.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n\r\n    const preloader = document.querySelector('#preloader');\r\n\r\n    const calendar = document.querySelector('.calendar'),\r\n        navDate = document.querySelector('.navigation__date'),\r\n        prevBtn = document.querySelector('#prev'),\r\n        nextBtn = document.querySelector('#next'),\r\n        todayBtn = document.querySelector('#today');\r\n\r\n    let date = new Date(),\r\n        currYear = date.getFullYear(),\r\n        currMonth = date.getMonth(),\r\n        currDay = date.getDate(),\r\n        step = 0;\r\n\r\n    const months = [['Jan', 31], ['Feb', 28], ['Mar', 31], ['Apr', 30], ['May', 31], ['Jun', 30], ['Jul', 31], ['Aug', 31], ['Sep', 30], ['Oct', 31], ['Nov', 30], ['Dec', 31]];\r\n    const weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n    const colors = ['#0d6efd', '#6610f2', '#6f42c1', '#d63384', '#fd7e14', '#ffc107', '#198754', '#20c997', '#0dcaf0'];\r\n    const firstHour = 12;\r\n\r\n    //===================================== Functions =============================================\r\n\r\n    function showNavDate(day, month) {\r\n\r\n        let firstNavDay = day - 3,\r\n            lastNavDay = day + 3,\r\n            navMonth = month;\r\n\r\n        if (firstNavDay <= 0) {\r\n            navMonth--;\r\n            firstNavDay = months[navMonth][1] - Math.abs(firstNavDay);\r\n            navDate.textContent = `${months[navMonth][0]} ${firstNavDay} - ${months[navMonth + 1][0]} ${lastNavDay}, ${currYear}`;\r\n        } else if (lastNavDay > months[navMonth][1]) {\r\n            navMonth++;\r\n            lastNavDay = lastNavDay - months[navMonth][1];\r\n            navDate.textContent = `${months[navMonth - 1][0]} ${firstNavDay} - ${months[navMonth][0]} ${lastNavDay}, ${currYear}`;\r\n        } else {\r\n            navDate.textContent = `${months[navMonth][0]} ${firstNavDay} - ${lastNavDay}, ${currYear}`;\r\n        }\r\n    }\r\n\r\n    //------------------------------------------------\r\n\r\n    function showCalendarDate(day, month) {\r\n        let date = '',\r\n            WeekDayIndex = 0;\r\n\r\n        day -= 3;\r\n\r\n        if (day <= 0) {\r\n            month--;\r\n            day = months[month][1] - Math.abs(day);\r\n            WeekDayIndex = new Date(currYear, month, day).getDay();\r\n            date = `${weekDays[WeekDayIndex]} ${month + 1}/${day}`;\r\n        } else if (day > months[month][1]) {\r\n            month++;\r\n            day = 1;\r\n            WeekDayIndex = new Date(currYear, month, day).getDay();\r\n            date = `${weekDays[WeekDayIndex]} ${month + 1}/${day}`;\r\n        } else {\r\n            WeekDayIndex = new Date(currYear, month, day).getDay();\r\n            date = `${weekDays[WeekDayIndex]} ${month + 1}/${day}`;\r\n        }\r\n\r\n        return date;\r\n    }\r\n\r\n    //------------------------------------------------\r\n\r\n    function drawCurrDay() {\r\n\r\n        if (isCurrDayTrue()) {\r\n            for (let i = 1; i < rows.length; i++) {\r\n                rows[i].children[4].classList.add('bg-curr-day');\r\n            }\r\n        } else {\r\n            for (let i = 1; i < rows.length; i++) {\r\n                rows[i].children[4].classList.remove('bg-curr-day');\r\n            }\r\n        }\r\n    }\r\n\r\n    //------------------------------------------------\r\n\r\n    function drawEventCard(parent, timeArr, event) {\r\n\r\n        parent.style.cssText = 'position: relative;';\r\n\r\n        const randomIndex = Math.floor(Math.random() * (colors.length - 1));\r\n        const durationCount = event.duration / 30;\r\n        let widthValue = 0,\r\n            opacityCard = 1;\r\n\r\n        if (parent.firstElementChild !== null) {\r\n            widthValue = 2;\r\n        } else {\r\n            widthValue = 1;\r\n        }\r\n\r\n        eventDayArr = event.date.split('/');\r\n\r\n        if (+`20${eventDayArr[2]}` !== currYear || (+eventDayArr[1] - 1) !== currMonth || +eventDayArr[0] !== currDay) {\r\n            if ((Date.parse(new Date(`20${eventDayArr[2]}`, eventDayArr[1] - 1, eventDayArr[0])) - Date.parse(date)) < 0) {\r\n                opacityCard = .4;\r\n            }\r\n        }\r\n\r\n        const card = document.createElement('div');\r\n        card.classList.add('card');\r\n        card.style.cssText = `\r\n            background-color: ${colors[randomIndex]};\r\n            height: calc(100% * ${durationCount}); \r\n            position: absolute; \r\n            right: 3px;\r\n            width: calc((100% - 5px) / ${widthValue});\r\n            font-size: 12px; \r\n            color: #fff; \r\n            border-radius: 3px;\r\n            padding-left: 5px;\r\n            white-space: nowrap;\r\n            overflow: hidden;\r\n            opacity: ${opacityCard};\r\n            `;\r\n\r\n        if (durationCount === 1) {\r\n            card.innerHTML = `\r\n                <div class=\"card-time\">${timeArr[0]}:${timeArr[1]} ${event.name}</div>\r\n                `;\r\n        } else {\r\n            card.innerHTML = `\r\n                <div class=\"card-time\">${timeArr[0]}:${timeArr[1]}</div>\r\n                <div class=\"card-text\">${event.name}</div>\r\n                `;\r\n        }\r\n        parent.append(card);\r\n    }\r\n\r\n    //------------------------------------------------\r\n\r\n    function isCurrDayTrue() {\r\n\r\n        const currDayArr = rows[0].children[4].textContent.slice(4).split('/');\r\n\r\n        if ((+currDayArr[0] - 1) === date.getMonth() && +currDayArr[1] === date.getDate()) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    //------------------------------------------------\r\n\r\n    function renderHours(hour) {\r\n        let time = '';\r\n\r\n        for (let i = 3; i < rows.length; i++) {\r\n            if (i % 2 != 0) {\r\n                if ((hour - 12) === 0) {\r\n                    time = `${hour}am`;\r\n                } else if ((hour - 12) <= 12) {\r\n                    time = `${hour - 12}am`;\r\n                } else {\r\n                    time = `${hour - 24}pm`;\r\n                }\r\n                rows[i].children[0].textContent = time;\r\n                hour++;\r\n            }\r\n        }\r\n    }\r\n\r\n    //------------------------------------------------\r\n\r\n    function showEvents() {\r\n        let currDayArr, eventDayArr, eventTimeFormat, eventTimeArr, time;\r\n\r\n        jsonData.events.forEach(event => {\r\n\r\n            for (let i = 0; i < (rows[0].children.length - 1); i++) {\r\n                currDayArr = rows[0].children[i + 1].textContent.slice(4).split('/');\r\n                eventDayArr = event.date.split('/');\r\n\r\n                if (+currDayArr[0] === +eventDayArr[1] && +currDayArr[1] === +eventDayArr[0]) {\r\n                    eventTimeArr = event.time.split(':');\r\n                    eventTimeFormat = event.ampm;\r\n                    time = `${eventTimeArr[0]}${eventTimeFormat}`;\r\n\r\n                    for (let j = 3; j < rows.length; j++) {\r\n                        if (j % 2 != 0) {\r\n                            if (time === rows[j].children[0].textContent) {\r\n                                if (eventTimeArr[1] === '00') {\r\n                                    drawEventCard(rows[j].children[i + 1], eventTimeArr, event);\r\n                                } else {\r\n                                    drawEventCard(rows[j + 1].children[i + 1], eventTimeArr, event);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    //------------------------------------------------\r\n\r\n    function clearCalendar() {\r\n        for (let i = 1; i < rows[0].children.length; i++) {\r\n            for (let j = 3; j < rows.length; j++) {\r\n                rows[j].children[i].textContent = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    //------------------------------------------------\r\n\r\n    function renderCalendar(day, month) {\r\n\r\n        for (let i = 0; i < (rows[0].children.length - 1); i++) {\r\n            rows[0].children[i + 1].textContent = showCalendarDate(day + i, month);\r\n            rows[0].children[i + 1].classList.add('text-center');\r\n        }\r\n        drawCurrDay();\r\n        renderHours(firstHour);\r\n    }\r\n\r\n\r\n    //================================ Rendering (main block) ========================================\r\n\r\n    for (let i = 0; i <= 50; i++) {\r\n        if (i == 2) {\r\n            calendar.innerHTML += `\r\n        <div class=\"row\">\r\n            <div class=\"col bg-body-secondary h-3 border-start\"></div>\r\n            <div class=\"col bg-body-secondary h-3\"></div>\r\n            <div class=\"col bg-body-secondary h-3\"></div>\r\n            <div class=\"col bg-body-secondary h-3\"></div>\r\n            <div class=\"col bg-body-secondary h-3\"></div>\r\n            <div class=\"col bg-body-secondary h-3\"></div>\r\n            <div class=\"col bg-body-secondary h-3\"></div>\r\n            <div class=\"col bg-body-secondary h-3 border-end\"></div>\r\n        </div>   \r\n        `;\r\n        } else {\r\n            calendar.innerHTML += `\r\n        <div class=\"row\">\r\n            <div class=\"col border\"></div>\r\n            <div class=\"col border\"></div>\r\n            <div class=\"col border\"></div>\r\n            <div class=\"col border\"></div>\r\n            <div class=\"col border\"></div>\r\n            <div class=\"col border\"></div>\r\n            <div class=\"col border\"></div>\r\n            <div class=\"col border\"></div>\r\n        </div>   \r\n        `;\r\n        }\r\n    }\r\n\r\n    const rows = document.querySelectorAll('.row');\r\n\r\n    for (let i = 0; i < rows[1].children.length; i++) {\r\n        rows[1].children[i].classList.add('h-40');\r\n    }\r\n\r\n    rows[1].children[0].textContent = 'all-day';\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n        rows[i].children[0].classList.add('w-55', 'text-secondary');\r\n    }\r\n\r\n    for (let i = 3; i < rows.length; i++)\r\n        for (let j = 0; j < rows[i].children.length; j++) {\r\n            if (i % 2 == 0) {\r\n                rows[i].children[j].classList.add('border-t');\r\n                if (j !== rows[i].children.length - 1) {\r\n                    rows[i].children[j].classList.add('border-r');\r\n                }\r\n            } else {\r\n                rows[i].children[j].classList.add('border-b');\r\n                if (j !== rows[i].children.length - 1) {\r\n                    rows[i].children[j].classList.add('border-r');\r\n                }\r\n            }\r\n        }\r\n\r\n    showNavDate(currDay, currMonth);\r\n    renderCalendar(currDay, currMonth);\r\n    setTimeout(function () {\r\n        preloader.classList.add('hidden');\r\n        showEvents();\r\n    }, 500);\r\n\r\n    //================================= Liseners ==========================================\r\n\r\n    prevBtn.addEventListener('click', () => {\r\n        if (step >= -21) {\r\n            step -= 7;\r\n            currDay -= 7;\r\n            if (currDay <= 0) {\r\n                currMonth--;\r\n                currDay = months[currMonth][1] - Math.abs(currDay);\r\n            }\r\n            showNavDate(currDay, currMonth);\r\n            renderCalendar(currDay, currMonth);\r\n        }\r\n        if (isCurrDayTrue()) todayBtn.disabled = true;\r\n        else todayBtn.disabled = false;\r\n        clearCalendar();\r\n        showEvents();\r\n    });\r\n\r\n    nextBtn.addEventListener('click', () => {\r\n        if (step <= 21) {\r\n            step += 7;\r\n            currDay += 7;\r\n            if (currDay > months[currMonth][1]) {\r\n                currDay = currDay - months[currMonth][1];\r\n                currMonth++;\r\n            }\r\n            showNavDate(currDay, currMonth);\r\n            renderCalendar(currDay, currMonth);\r\n        }\r\n        if (isCurrDayTrue()) todayBtn.disabled = true;\r\n        else todayBtn.disabled = false;\r\n        clearCalendar();\r\n        showEvents();\r\n    });\r\n\r\n    todayBtn.addEventListener('click', () => {\r\n        currMonth = date.getMonth();\r\n        currDay = date.getDate();\r\n        showNavDate(currDay, currMonth);\r\n        renderCalendar(currDay, currMonth);\r\n        step = 0;\r\n        todayBtn.disabled = true;\r\n        clearCalendar();\r\n        showEvents();\r\n    });\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["document","addEventListener","preloader","querySelector","calendar","navDate","prevBtn","nextBtn","todayBtn","date","Date","currYear","getFullYear","currMonth","getMonth","currDay","getDate","step","months","weekDays","colors","showNavDate","day","month","firstNavDay","lastNavDay","navMonth","Math","abs","textContent","showCalendarDate","WeekDayIndex","getDay","drawEventCard","parent","timeArr","event","style","cssText","randomIndex","floor","random","length","durationCount","duration","widthValue","opacityCard","firstElementChild","eventDayArr","split","parse","card","createElement","classList","add","innerHTML","name","append","isCurrDayTrue","currDayArr","rows","children","slice","showEvents","eventTimeFormat","eventTimeArr","time","jsonData","events","forEach","i","ampm","j","clearCalendar","renderCalendar","remove","drawCurrDay","hour","renderHours","querySelectorAll","setTimeout","disabled"],"sourceRoot":""}